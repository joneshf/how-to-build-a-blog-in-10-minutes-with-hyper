// Generated by purs version 0.11.4
"use strict";
var Blog_Types_Body = require("../Blog.Types.Body");
var Blog_Types_PostId = require("../Blog.Types.PostId");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Tuple_Nested = require("../Data.Tuple.Nested");
var Data_Unit = require("../Data.Unit");
var Database_PostgreSQL = require("../Database.PostgreSQL");
var Scaffold_Id = require("../Scaffold.Id");
var Scaffold_New = require("../Scaffold.New");
var Scaffold_SQL = require("../Scaffold.SQL");
var Scaffold_Show = require("../Scaffold.Show");
var Text_Smolder_HTML = require("../Text.Smolder.HTML");
var Text_Smolder_HTML_Attributes = require("../Text.Smolder.HTML.Attributes");
var Text_Smolder_Markup = require("../Text.Smolder.Markup");
var Type_Proxy = require("../Type.Proxy");
var Type_Trout_ContentType_HTML = require("../Type.Trout.ContentType.HTML");
var Comment = function (x) {
    return x;
};
var tableComment = new Scaffold_SQL.Table(function (v) {
    return "comment";
});
var newtypeComment = new Data_Newtype.Newtype(function (n) {
    return n;
}, Comment);
var genericComment = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Blog.Comment.Comment" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Comment))(Data_Generic.fromSpine(Data_Generic.genericTuple(Scaffold_Id.genericId)(Data_Generic.genericTuple(Blog_Types_Body.genericBody)(Data_Generic.genericTuple(Blog_Types_PostId.genericPostId)(Data_Generic.genericUnit))))(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Blog.Comment.Comment", [ {
        sigConstructor: "Blog.Comment.Comment", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericTuple(Scaffold_Id.genericId)(Data_Generic.genericTuple(Blog_Types_Body.genericBody)(Data_Generic.genericTuple(Blog_Types_PostId.genericPostId)(Data_Generic.genericUnit))))(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Blog.Comment.Comment", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericTuple(Scaffold_Id.genericId)(Data_Generic.genericTuple(Blog_Types_Body.genericBody)(Data_Generic.genericTuple(Blog_Types_PostId.genericPostId)(Data_Generic.genericUnit))))(v);
    } ]);
});
var fromSQLRowComment = new Database_PostgreSQL.FromSQLRow(function ($17) {
    return Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap(newtypeComment))(Database_PostgreSQL.fromSQLRow(Database_PostgreSQL.fromSQLRowTuple(Scaffold_Id.fromSQLValueId)(Database_PostgreSQL.fromSQLRowTuple(Blog_Types_Body.fromSQLValueBody)(Database_PostgreSQL.fromSQLRowTuple(Blog_Types_PostId.fromSQLValuePostId)(Database_PostgreSQL.fromSQLRowUnit))))($17));
});
var foreignKeyCommentPostId = new Scaffold_SQL.ForeignKey(function ($18) {
    return Data_Tuple_Nested.get3(Data_Newtype.unwrap(newtypeComment)($18));
}, function (v) {
    return "post_id";
});
var foreignKeyCommentId = new Scaffold_SQL.ForeignKey(function ($19) {
    return Data_Newtype.unwrap(Blog_Types_PostId.newtypePostId)(Data_Tuple_Nested.get3(Data_Newtype.unwrap(newtypeComment)($19)));
}, function (v) {
    return "post_id";
});
var encodeNewComment = new Scaffold_New.EncodeNew(function (v) {
    return Text_Smolder_HTML.label(Control_Bind.discard(Control_Bind.discardUnit)(Text_Smolder_Markup.bindMarkupM)(Text_Smolder_Markup.text("Post a new comment"))(function () {
        return Text_Smolder_Markup["with"](Text_Smolder_Markup.attributableMarkupMF)(Text_Smolder_HTML.textarea)(Text_Smolder_HTML_Attributes.name("body"))(Text_Smolder_Markup.text(""));
    }));
});
var encodeHTMLComment = new Type_Trout_ContentType_HTML.EncodeHTML(function (comment) {
    return Text_Smolder_HTML.p(Type_Trout_ContentType_HTML.encodeHTML(Blog_Types_Body.encodeHTMLBody)(Data_Tuple_Nested.get2(Data_Newtype.unwrap(newtypeComment)(comment))));
});
var encodeShowComment = new Scaffold_Show.EncodeShow(Type_Trout_ContentType_HTML.encodeHTML(encodeHTMLComment));
var columnsComment = new Scaffold_SQL.Columns(function (v) {
    return Scaffold_SQL.columns(Scaffold_SQL.columnsTuple(Blog_Types_Body.columnsBody)(Scaffold_SQL.columnsTuple(Blog_Types_PostId.columnsPostId)(Scaffold_SQL.columnsUnit)))(Type_Proxy["Proxy"].value);
});
module.exports = {
    Comment: Comment, 
    genericComment: genericComment, 
    newtypeComment: newtypeComment, 
    columnsComment: columnsComment, 
    encodeHTMLComment: encodeHTMLComment, 
    encodeNewComment: encodeNewComment, 
    encodeShowComment: encodeShowComment, 
    foreignKeyCommentPostId: foreignKeyCommentPostId, 
    foreignKeyCommentId: foreignKeyCommentId, 
    fromSQLRowComment: fromSQLRowComment, 
    tableComment: tableComment
};
