// Generated by purs version 0.11.4
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Either = require("../Data.Either");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_Int = require("../Data.Int");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Unit = require("../Data.Unit");
var Database_PostgreSQL = require("../Database.PostgreSQL");
var Hyper_Form = require("../Hyper.Form");
var Scaffold_Form = require("../Scaffold.Form");
var Scaffold_Id = require("../Scaffold.Id");
var Scaffold_SQL = require("../Scaffold.SQL");
var PostId = function (x) {
    return x;
};
var newtypePostId = new Data_Newtype.Newtype(function (n) {
    return n;
}, PostId);
var toSQLValuePostId = new Database_PostgreSQL.ToSQLValue(function ($13) {
    return Database_PostgreSQL.toSQLValue(Scaffold_Id.toSQLValueId)(Data_Newtype.unwrap(newtypePostId)($13));
});
var genericPostId = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Blog.Types.PostId.PostId" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(PostId))(Data_Generic.fromSpine(Scaffold_Id.genericId)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Blog.Types.PostId.PostId", [ {
        sigConstructor: "Blog.Types.PostId.PostId", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Scaffold_Id.genericId)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Blog.Types.PostId.PostId", [ function ($dollarq) {
        return Data_Generic.toSpine(Scaffold_Id.genericId)(v);
    } ]);
});
var fromSQLValuePostId = new Database_PostgreSQL.FromSQLValue(function ($14) {
    return Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap(newtypePostId))(Database_PostgreSQL.fromSQLValue(Scaffold_Id.fromSQLValueId)($14));
});
var fromFormPostId = new Scaffold_Form.FromForm(Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($15) {
    return Data_Functor.map(Data_Either.functorEither)(function ($16) {
        return Data_Newtype.wrap(newtypePostId)(Data_Newtype.wrap(Scaffold_Id.newtypeId)($16));
    })(Data_Maybe.maybe(new Data_Either.Left("\"post_id\" was not an integer"))(Data_Either.Right.create)($15));
})(function ($17) {
    return Data_Functor.map(Data_Either.functorEither)(Data_Int.fromString)(Hyper_Form.required("post_id")($17));
}));
var columnsPostId = new Scaffold_SQL.Columns(function (v) {
    return Control_Applicative.pure(Data_List_Types.applicativeList)("post_id");
});
module.exports = {
    PostId: PostId, 
    genericPostId: genericPostId, 
    newtypePostId: newtypePostId, 
    columnsPostId: columnsPostId, 
    fromFormPostId: fromFormPostId, 
    fromSQLValuePostId: fromSQLValuePostId, 
    toSQLValuePostId: toSQLValuePostId
};
