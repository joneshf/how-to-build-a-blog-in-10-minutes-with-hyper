// Generated by purs version 0.11.4
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Argonaut_Core = require("../Data.Argonaut.Core");
var Data_Array = require("../Data.Array");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Foldable = require("../Data.Foldable");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Generic = require("../Data.Generic");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_StrMap = require("../Data.StrMap");
var Data_String = require("../Data.String");
var Data_Traversable = require("../Data.Traversable");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var Type_Proxy = require("../Type.Proxy");
var gDecodeJson$prime = function (signature) {
    return function (json) {
        var mFail = function (msg) {
            return Data_Maybe.maybe(new Data_Either.Left(msg))(Data_Either.Right.create);
        };
        if (signature instanceof Data_Generic.SigNumber) {
            return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SNumber.create)(mFail("Expected a number")(Data_Argonaut_Core.toNumber(json)));
        };
        if (signature instanceof Data_Generic.SigInt) {
            return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SInt.create)(mFail("Expected an integer number")(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Int.fromNumber)(Data_Argonaut_Core.toNumber(json))));
        };
        if (signature instanceof Data_Generic.SigString) {
            return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SString.create)(mFail("Expected a string")(Data_Argonaut_Core.toString(json)));
        };
        if (signature instanceof Data_Generic.SigChar) {
            return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SChar.create)(mFail("Expected a char")(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_String.toChar)(Data_Argonaut_Core.toString(json))));
        };
        if (signature instanceof Data_Generic.SigBoolean) {
            return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SBoolean.create)(mFail("Expected a boolean")(Data_Argonaut_Core.toBoolean(json)));
        };
        if (signature instanceof Data_Generic.SigUnit) {
            return Control_Applicative.pure(Data_Either.applicativeEither)(Data_Generic.SUnit.value);
        };
        if (signature instanceof Data_Generic.SigArray) {
            return Control_Bind.bind(Data_Either.bindEither)(mFail("Expected an array")(Data_Argonaut_Core.toArray(json)))(function (v) {
                return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SArray.create)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(function ($34) {
                    return Data_Functor.map(Data_Either.functorEither)(Data_Function["const"])(gDecodeJson$prime(signature.value0(Data_Unit.unit))($34));
                })(v));
            });
        };
        if (signature instanceof Data_Generic.SigRecord) {
            return Control_Bind.bind(Data_Either.bindEither)(mFail("Expected an object")(Data_Argonaut_Core.toObject(json)))(function (v) {
                return Data_Functor.map(Data_Either.functorEither)(Data_Generic.SRecord.create)(Data_Traversable["for"](Data_Either.applicativeEither)(Data_Traversable.traversableArray)(signature.value0)(function (v1) {
                    return Control_Bind.bind(Data_Either.bindEither)(mFail("'" + (v1.recLabel + "' property missing"))(Data_StrMap.lookup(v1.recLabel)(v)))(function (v2) {
                        return Control_Bind.bind(Data_Either.bindEither)(gDecodeJson$prime(v1.recValue(Data_Unit.unit))(v2))(function (v3) {
                            return Control_Applicative.pure(Data_Either.applicativeEither)({
                                recLabel: v1.recLabel, 
                                recValue: Data_Function["const"](v3)
                            });
                        });
                    });
                }));
            });
        };
        if (signature instanceof Data_Generic.SigProd) {
            var decodingErr = function (msg) {
                return "When decoding a " + (signature.value0 + (": " + msg));
            };
            return Control_Bind.bind(Data_Either.bindEither)(mFail(decodingErr("expected an object"))(Data_Argonaut_Core.toObject(json)))(function (v) {
                return Control_Bind.bind(Data_Either.bindEither)(mFail(decodingErr("'tag' property is missing"))(Data_StrMap.lookup("tag")(v)))(function (v1) {
                    return Control_Bind.bind(Data_Either.bindEither)(mFail(decodingErr("'tag' property is not a string"))(Data_Argonaut_Core.toString(v1)))(function (v2) {
                        var v3 = Data_Foldable.find(Data_Foldable.foldableArray)(function ($35) {
                            return (function (v4) {
                                return v2 === v4;
                            })((function (v4) {
                                return v4.sigConstructor;
                            })($35));
                        })(signature.value1);
                        if (v3 instanceof Data_Maybe.Nothing) {
                            return new Data_Either.Left(decodingErr("'" + (v2 + "' isn't a valid constructor")));
                        };
                        if (v3 instanceof Data_Maybe.Just) {
                            return Control_Bind.bind(Data_Either.bindEither)(mFail(decodingErr("'values' array is missing"))(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray)(Data_StrMap.lookup("values")(v))))(function (v4) {
                                return Control_Bind.bind(Data_Either.bindEither)(Data_Array.zipWithA(Data_Either.applicativeEither)(function (k) {
                                    return gDecodeJson$prime(k(Data_Unit.unit));
                                })(v3.value0.sigValues)(v4))(function (v5) {
                                    return Control_Applicative.pure(Data_Either.applicativeEither)(new Data_Generic.SProd(v2, Data_Functor.map(Data_Functor.functorArray)(Data_Function["const"])(v5)));
                                });
                            });
                        };
                        throw new Error("Failed pattern match at Data.Argonaut.Decode.Generic line 50, column 5 - line 55, column 41: " + [ v3.constructor.name ]);
                    });
                });
            });
        };
        throw new Error("Failed pattern match at Data.Argonaut.Decode.Generic line 29, column 31 - line 55, column 41: " + [ signature.constructor.name ]);
    };
};
var gDecodeJson = function (dictGeneric) {
    return Control_Bind.composeKleisliFlipped(Data_Either.bindEither)(function ($36) {
        return Data_Maybe.maybe(new Data_Either.Left("fromSpine failed"))(Data_Either.Right.create)(Data_Generic.fromSpine(dictGeneric)($36));
    })(gDecodeJson$prime(Data_Generic.toSignature(dictGeneric)(Type_Proxy["Proxy"].value)));
};
module.exports = {
    gDecodeJson: gDecodeJson, 
    "gDecodeJson'": gDecodeJson$prime
};
