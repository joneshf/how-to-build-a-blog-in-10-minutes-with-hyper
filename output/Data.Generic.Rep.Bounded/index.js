// Generated by purs version 0.11.4
"use strict";
var Data_Generic_Rep = require("../Data.Generic.Rep");
var GenericBottom = function (genericBottom$prime) {
    this["genericBottom'"] = genericBottom$prime;
};
var GenericTop = function (genericTop$prime) {
    this["genericTop'"] = genericTop$prime;
};
var genericTopNoArguments = new GenericTop(Data_Generic_Rep.NoArguments.value);
var genericTop$prime = function (dict) {
    return dict["genericTop'"];
};
var genericTopConstructor = function (dictGenericTop) {
    return new GenericTop(genericTop$prime(dictGenericTop));
};
var genericTopSum = function (dictGenericTop) {
    return new GenericTop(new Data_Generic_Rep.Inr(genericTop$prime(dictGenericTop)));
};
var genericTop = function (dictGeneric) {
    return function (dictGenericTop) {
        return Data_Generic_Rep.to(dictGeneric)(genericTop$prime(dictGenericTop));
    };
};
var genericBottomNoArguments = new GenericBottom(Data_Generic_Rep.NoArguments.value);
var genericBottom$prime = function (dict) {
    return dict["genericBottom'"];
};
var genericBottomConstructor = function (dictGenericBottom) {
    return new GenericBottom(genericBottom$prime(dictGenericBottom));
};
var genericBottomSum = function (dictGenericBottom) {
    return new GenericBottom(new Data_Generic_Rep.Inl(genericBottom$prime(dictGenericBottom)));
};
var genericBottom = function (dictGeneric) {
    return function (dictGenericBottom) {
        return Data_Generic_Rep.to(dictGeneric)(genericBottom$prime(dictGenericBottom));
    };
};
module.exports = {
    GenericBottom: GenericBottom, 
    GenericTop: GenericTop, 
    genericBottom: genericBottom, 
    "genericBottom'": genericBottom$prime, 
    genericTop: genericTop, 
    "genericTop'": genericTop$prime, 
    genericBottomNoArguments: genericBottomNoArguments, 
    genericBottomSum: genericBottomSum, 
    genericBottomConstructor: genericBottomConstructor, 
    genericTopNoArguments: genericTopNoArguments, 
    genericTopSum: genericTopSum, 
    genericTopConstructor: genericTopConstructor
};
