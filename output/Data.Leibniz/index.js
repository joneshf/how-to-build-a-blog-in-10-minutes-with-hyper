// Generated by purs version 0.11.4
"use strict";
var Control_Category = require("../Control.Category");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Prelude = require("../Prelude");
var Unsafe_Coerce = require("../Unsafe.Coerce");
var Leibniz = function (x) {
    return x;
};
var symm = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var semigroupoidLeibniz = new Control_Semigroupoid.Semigroupoid(function (v) {
    return function (v1) {
        return Unsafe_Coerce.unsafeCoerce;
    };
});
var runLeibniz = function (v) {
    return v;
};
var lowerLeibniz3of3 = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var lowerLeibniz2of3 = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var lowerLeibniz2of2 = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var lowerLeibniz1of3 = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var lowerLeibniz1of2 = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var lowerLeibniz = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var liftLeibniz3of3 = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var liftLeibniz2of3 = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var liftLeibniz2of2 = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var liftLeibniz1of3 = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var liftLeibniz1of2 = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var liftLeibniz = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var coerceSymm = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var coerce = function (v) {
    return Unsafe_Coerce.unsafeCoerce;
};
var categoryLeibniz = new Control_Category.Category(function () {
    return semigroupoidLeibniz;
}, Control_Category.id(Control_Category.categoryFn));
module.exports = {
    Leibniz: Leibniz, 
    coerce: coerce, 
    coerceSymm: coerceSymm, 
    liftLeibniz: liftLeibniz, 
    liftLeibniz1of2: liftLeibniz1of2, 
    liftLeibniz1of3: liftLeibniz1of3, 
    liftLeibniz2of2: liftLeibniz2of2, 
    liftLeibniz2of3: liftLeibniz2of3, 
    liftLeibniz3of3: liftLeibniz3of3, 
    lowerLeibniz: lowerLeibniz, 
    lowerLeibniz1of2: lowerLeibniz1of2, 
    lowerLeibniz1of3: lowerLeibniz1of3, 
    lowerLeibniz2of2: lowerLeibniz2of2, 
    lowerLeibniz2of3: lowerLeibniz2of3, 
    lowerLeibniz3of3: lowerLeibniz3of3, 
    runLeibniz: runLeibniz, 
    symm: symm, 
    semigroupoidLeibniz: semigroupoidLeibniz, 
    categoryLeibniz: categoryLeibniz
};
