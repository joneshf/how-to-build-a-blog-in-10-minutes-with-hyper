// Generated by purs version 0.11.4
"use strict";
var Control_Apply = require("../Control.Apply");
var Data_Either = require("../Data.Either");
var Data_Eq = require("../Data.Eq");
var Data_Generic = require("../Data.Generic");
var Data_HeytingAlgebra = require("../Data.HeytingAlgebra");
var Data_List = require("../Data.List");
var Data_List_Types = require("../Data.List.Types");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Ord = require("../Data.Ord");
var Data_Ordering = require("../Data.Ordering");
var Data_Path_Pathy = require("../Data.Path.Pathy");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Prelude = require("../Prelude");
var URIScheme = function (x) {
    return x;
};
var Query = function (x) {
    return x;
};
var IPv6Address = (function () {
    function IPv6Address(value0) {
        this.value0 = value0;
    };
    IPv6Address.create = function (value0) {
        return new IPv6Address(value0);
    };
    return IPv6Address;
})();
var IPv4Address = (function () {
    function IPv4Address(value0) {
        this.value0 = value0;
    };
    IPv4Address.create = function (value0) {
        return new IPv4Address(value0);
    };
    return IPv4Address;
})();
var NameAddress = (function () {
    function NameAddress(value0) {
        this.value0 = value0;
    };
    NameAddress.create = function (value0) {
        return new NameAddress(value0);
    };
    return NameAddress;
})();
var Authority = (function () {
    function Authority(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    Authority.create = function (value0) {
        return function (value1) {
            return new Authority(value0, value1);
        };
    };
    return Authority;
})();
var HierarchicalPart = (function () {
    function HierarchicalPart(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    HierarchicalPart.create = function (value0) {
        return function (value1) {
            return new HierarchicalPart(value0, value1);
        };
    };
    return HierarchicalPart;
})();
var URI = (function () {
    function URI(value0, value1, value2, value3) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
        this.value3 = value3;
    };
    URI.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return function (value3) {
                    return new URI(value0, value1, value2, value3);
                };
            };
        };
    };
    return URI;
})();
var RelativePart = (function () {
    function RelativePart(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    RelativePart.create = function (value0) {
        return function (value1) {
            return new RelativePart(value0, value1);
        };
    };
    return RelativePart;
})();
var RelativeRef = (function () {
    function RelativeRef(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    RelativeRef.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new RelativeRef(value0, value1, value2);
            };
        };
    };
    return RelativeRef;
})();
var AbsoluteURI = (function () {
    function AbsoluteURI(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    AbsoluteURI.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new AbsoluteURI(value0, value1, value2);
            };
        };
    };
    return AbsoluteURI;
})();
var showURIScheme = new Data_Show.Show(function (v) {
    return "(URIScheme " + (Data_Show.show(Data_Show.showString)(v) + ")");
});
var showQuery = new Data_Show.Show(function (v) {
    return "(Query " + (Data_Show.show(Data_List_Types.showList(Data_Tuple.showTuple(Data_Show.showString)(Data_Maybe.showMaybe(Data_Show.showString))))(v) + ")");
});
var showHost = new Data_Show.Show(function (v) {
    if (v instanceof IPv6Address) {
        return "(IPv6Address " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof IPv4Address) {
        return "(IPv4Address " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    if (v instanceof NameAddress) {
        return "(NameAddress " + (Data_Show.show(Data_Show.showString)(v.value0) + ")");
    };
    throw new Error("Failed pattern match at Data.URI.Types line 111, column 3 - line 112, column 3: " + [ v.constructor.name ]);
});
var showAuthority = new Data_Show.Show(function (v) {
    return "(Authority " + (Data_Show.show(Data_Maybe.showMaybe(Data_Show.showString))(v.value0) + (" " + (Data_Show.show(Data_Show.showArray(Data_Tuple.showTuple(showHost)(Data_Maybe.showMaybe(Data_Show.showInt))))(v.value1) + ")")));
});
var showHierarchicalPart = new Data_Show.Show(function (v) {
    return "(HierarchicalPart " + (Data_Show.show(Data_Maybe.showMaybe(showAuthority))(v.value0) + (" " + (Data_Show.show(Data_Maybe.showMaybe(Data_Either.showEither(Data_Path_Pathy.showPath)(Data_Path_Pathy.showPath)))(v.value1) + ")")));
});
var showURI = new Data_Show.Show(function (v) {
    return "(URI " + (Data_Show.show(Data_Maybe.showMaybe(showURIScheme))(v.value0) + (" " + (Data_Show.show(showHierarchicalPart)(v.value1) + (" " + (Data_Show.show(Data_Maybe.showMaybe(showQuery))(v.value2) + (" " + (Data_Show.show(Data_Maybe.showMaybe(Data_Show.showString))(v.value3) + ")")))))));
});
var showRelativePart = new Data_Show.Show(function (v) {
    return "(RelativePart " + (Data_Show.show(Data_Maybe.showMaybe(showAuthority))(v.value0) + (" " + (Data_Show.show(Data_Maybe.showMaybe(Data_Either.showEither(Data_Path_Pathy.showPath)(Data_Path_Pathy.showPath)))(v.value1) + ")")));
});
var showRelativeRef = new Data_Show.Show(function (v) {
    return "(RelativeRef " + (Data_Show.show(showRelativePart)(v.value0) + (" " + (Data_Show.show(Data_Maybe.showMaybe(showQuery))(v.value1) + (" " + (Data_Show.show(Data_Maybe.showMaybe(Data_Show.showString))(v.value2) + ")")))));
});
var showAbsoluteURI = new Data_Show.Show(function (v) {
    return "(AbsoluteURI " + (Data_Show.show(Data_Maybe.showMaybe(showURIScheme))(v.value0) + (" " + (Data_Show.show(showHierarchicalPart)(v.value1) + (" " + (Data_Show.show(Data_Maybe.showMaybe(showQuery))(v.value2) + ")")))));
});
var ordURIScheme = Data_Ord.ordString;
var ordQuery = Data_List_Types.ordList(Data_Tuple.ordTuple(Data_Ord.ordString)(Data_Maybe.ordMaybe(Data_Ord.ordString)));
var newtypeURIScheme = new Data_Newtype.Newtype(function (n) {
    return n;
}, URIScheme);
var newtypeQuery = new Data_Newtype.Newtype(function (n) {
    return n;
}, Query);
var genericURIScheme = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.URI.Types.URIScheme" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(URIScheme))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.URI.Types.URIScheme", [ {
        sigConstructor: "Data.URI.Types.URIScheme", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.URI.Types.URIScheme", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericString)(v);
    } ]);
});
var genericQuery = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.URI.Types.IPv6Address" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(IPv6Address.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.URI.Types.IPv4Address" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(IPv4Address.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.URI.Types.NameAddress" && v.value1.length === 1)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(NameAddress.create))(Data_Generic.fromSpine(Data_Generic.genericString)(v["value1"][0](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.URI.Types.Host", [ {
        sigConstructor: "Data.URI.Types.IPv6Address", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    }, {
        sigConstructor: "Data.URI.Types.IPv4Address", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    }, {
        sigConstructor: "Data.URI.Types.NameAddress", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericString)(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    if (v instanceof IPv6Address) {
        return new Data_Generic.SProd("Data.URI.Types.IPv6Address", [ function ($dollarq) {
            return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
        } ]);
    };
    if (v instanceof IPv4Address) {
        return new Data_Generic.SProd("Data.URI.Types.IPv4Address", [ function ($dollarq) {
            return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
        } ]);
    };
    if (v instanceof NameAddress) {
        return new Data_Generic.SProd("Data.URI.Types.NameAddress", [ function ($dollarq) {
            return Data_Generic.toSpine(Data_Generic.genericString)(v.value0);
        } ]);
    };
    throw new Error("Failed pattern match at Data.URI.Types line 108, column 1 - line 108, column 44: " + [ v.constructor.name ]);
});
var genericAuthority = new Data_Generic.Generic(function (v) {
    if (v instanceof Data_Generic.SProd && (v.value0 === "Data.URI.Types.Authority" && v.value1.length === 2)) {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(new Data_Maybe.Just(Authority.create))(Data_Generic.fromSpine(Data_Generic.genericMaybe(Data_Generic.genericString))(v["value1"][0](Data_Unit.unit))))(Data_Generic.fromSpine(Data_Generic.genericArray(Data_Generic.genericTuple(genericQuery)(Data_Generic.genericMaybe(Data_Generic.genericInt))))(v["value1"][1](Data_Unit.unit)));
    };
    return Data_Maybe.Nothing.value;
}, function ($dollarq) {
    return new Data_Generic.SigProd("Data.URI.Types.Authority", [ {
        sigConstructor: "Data.URI.Types.Authority", 
        sigValues: [ function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericMaybe(Data_Generic.genericString))(Data_Generic.anyProxy);
        }, function ($dollarq1) {
            return Data_Generic.toSignature(Data_Generic.genericArray(Data_Generic.genericTuple(genericQuery)(Data_Generic.genericMaybe(Data_Generic.genericInt))))(Data_Generic.anyProxy);
        } ]
    } ]);
}, function (v) {
    return new Data_Generic.SProd("Data.URI.Types.Authority", [ function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericMaybe(Data_Generic.genericString))(v.value0);
    }, function ($dollarq) {
        return Data_Generic.toSpine(Data_Generic.genericArray(Data_Generic.genericTuple(genericQuery)(Data_Generic.genericMaybe(Data_Generic.genericInt))))(v.value1);
    } ]);
});
var eqURIScheme = Data_Eq.eqString;
var eqQuery = Data_List_Types.eqList(Data_Tuple.eqTuple(Data_Eq.eqString)(Data_Maybe.eqMaybe(Data_Eq.eqString)));
var eqHost = new Data_Eq.Eq(function (x) {
    return function (y) {
        if (x instanceof IPv6Address && y instanceof IPv6Address) {
            return x.value0 === y.value0;
        };
        if (x instanceof IPv4Address && y instanceof IPv4Address) {
            return x.value0 === y.value0;
        };
        if (x instanceof NameAddress && y instanceof NameAddress) {
            return x.value0 === y.value0;
        };
        return false;
    };
});
var ordHost = new Data_Ord.Ord(function () {
    return eqHost;
}, function (x) {
    return function (y) {
        if (x instanceof IPv6Address && y instanceof IPv6Address) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof IPv6Address) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof IPv6Address) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof IPv4Address && y instanceof IPv4Address) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        if (x instanceof IPv4Address) {
            return Data_Ordering.LT.value;
        };
        if (y instanceof IPv4Address) {
            return Data_Ordering.GT.value;
        };
        if (x instanceof NameAddress && y instanceof NameAddress) {
            return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
        };
        throw new Error("Failed pattern match at Data.URI.Types line 107, column 1 - line 107, column 35: " + [ x.constructor.name, y.constructor.name ]);
    };
});
var eqAuthority = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value0)(y.value0) && Data_Eq.eq(Data_Eq.eqArray(Data_Tuple.eqTuple(eqHost)(Data_Maybe.eqMaybe(Data_Eq.eqInt))))(x.value1)(y.value1);
    };
});
var eqHierarchicalPart = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Maybe.eqMaybe(eqAuthority))(x.value0)(y.value0) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Either.eqEither(Data_Path_Pathy.eqPath)(Data_Path_Pathy.eqPath)))(x.value1)(y.value1);
    };
});
var eqURI = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Maybe.eqMaybe(eqURIScheme))(x.value0)(y.value0) && Data_Eq.eq(eqHierarchicalPart)(x.value1)(y.value1) && Data_Eq.eq(Data_Maybe.eqMaybe(eqQuery))(x.value2)(y.value2) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value3)(y.value3);
    };
});
var eqRelativePart = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Maybe.eqMaybe(eqAuthority))(x.value0)(y.value0) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Either.eqEither(Data_Path_Pathy.eqPath)(Data_Path_Pathy.eqPath)))(x.value1)(y.value1);
    };
});
var eqRelativeRef = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(eqRelativePart)(x.value0)(y.value0) && Data_Eq.eq(Data_Maybe.eqMaybe(eqQuery))(x.value1)(y.value1) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqString))(x.value2)(y.value2);
    };
});
var ordAuthority = new Data_Ord.Ord(function () {
    return eqAuthority;
}, function (x) {
    return function (y) {
        var v = Data_Ord.compare(Data_Maybe.ordMaybe(Data_Ord.ordString))(x.value0)(y.value0);
        if (v instanceof Data_Ordering.LT) {
            return Data_Ordering.LT.value;
        };
        if (v instanceof Data_Ordering.GT) {
            return Data_Ordering.GT.value;
        };
        return Data_Ord.compare(Data_Ord.ordArray(Data_Tuple.ordTuple(ordHost)(Data_Maybe.ordMaybe(Data_Ord.ordInt))))(x.value1)(y.value1);
    };
});
var eqAbsoluteURI = new Data_Eq.Eq(function (x) {
    return function (y) {
        return Data_Eq.eq(Data_Maybe.eqMaybe(eqURIScheme))(x.value0)(y.value0) && Data_Eq.eq(eqHierarchicalPart)(x.value1)(y.value1) && Data_Eq.eq(Data_Maybe.eqMaybe(eqQuery))(x.value2)(y.value2);
    };
});
module.exports = {
    AbsoluteURI: AbsoluteURI, 
    Authority: Authority, 
    HierarchicalPart: HierarchicalPart, 
    IPv6Address: IPv6Address, 
    IPv4Address: IPv4Address, 
    NameAddress: NameAddress, 
    Query: Query, 
    RelativePart: RelativePart, 
    RelativeRef: RelativeRef, 
    URI: URI, 
    URIScheme: URIScheme, 
    eqURI: eqURI, 
    showURI: showURI, 
    eqAbsoluteURI: eqAbsoluteURI, 
    showAbsoluteURI: showAbsoluteURI, 
    eqRelativeRef: eqRelativeRef, 
    showRelativeRef: showRelativeRef, 
    newtypeURIScheme: newtypeURIScheme, 
    eqURIScheme: eqURIScheme, 
    ordURIScheme: ordURIScheme, 
    genericURIScheme: genericURIScheme, 
    showURIScheme: showURIScheme, 
    eqHierarchicalPart: eqHierarchicalPart, 
    showHierarchicalPart: showHierarchicalPart, 
    eqRelativePart: eqRelativePart, 
    showRelativePart: showRelativePart, 
    eqAuthority: eqAuthority, 
    ordAuthority: ordAuthority, 
    genericAuthority: genericAuthority, 
    showAuthority: showAuthority, 
    eqHost: eqHost, 
    ordHost: ordHost, 
    genericQuery: genericQuery, 
    showHost: showHost, 
    newtypeQuery: newtypeQuery, 
    eqQuery: eqQuery, 
    ordQuery: ordQuery, 
    showQuery: showQuery
};
