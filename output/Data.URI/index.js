// Generated by purs version 0.11.4
"use strict";
var Control_Alt = require("../Control.Alt");
var Control_Apply = require("../Control.Apply");
var Data_Array = require("../Data.Array");
var Data_Either = require("../Data.Either");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_String = require("../Data.String");
var Data_URI_Fragment = require("../Data.URI.Fragment");
var Data_URI_HierarchicalPart = require("../Data.URI.HierarchicalPart");
var Data_URI_Query = require("../Data.URI.Query");
var Data_URI_RelativePart = require("../Data.URI.RelativePart");
var Data_URI_Scheme = require("../Data.URI.Scheme");
var Data_URI_Types = require("../Data.URI.Types");
var Prelude = require("../Prelude");
var Text_Parsing_StringParser = require("../Text.Parsing.StringParser");
var Text_Parsing_StringParser_Combinators = require("../Text.Parsing.StringParser.Combinators");
var Text_Parsing_StringParser_String = require("../Text.Parsing.StringParser.String");
var printURI = function (v) {
    return Data_String.joinWith("")(Data_Array.catMaybes([ Data_Functor.map(Data_Maybe.functorMaybe)(Data_URI_Scheme.printScheme)(v.value0), new Data_Maybe.Just(Data_URI_HierarchicalPart.printHierPart(v.value1)), Data_Functor.map(Data_Maybe.functorMaybe)(Data_URI_Query.printQuery)(v.value2), Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
        return "#" + v1;
    })(v.value3) ]));
};
var printRelativeRef = function (v) {
    return Data_String.joinWith("")(Data_Array.catMaybes([ new Data_Maybe.Just(Data_URI_RelativePart.printRelativePart(v.value0)), Data_Functor.map(Data_Maybe.functorMaybe)(Data_URI_Query.printQuery)(v.value1), Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
        return "#" + v1;
    })(v.value2) ]));
};
var printURIRef = Data_Either.either(printURI)(printRelativeRef);
var printAbsoluteURI = function (v) {
    return Data_String.joinWith("")(Data_Array.catMaybes([ Data_Functor.map(Data_Maybe.functorMaybe)(Data_URI_Scheme.printScheme)(v.value0), new Data_Maybe.Just(Data_URI_HierarchicalPart.printHierPart(v.value1)), Data_Functor.map(Data_Maybe.functorMaybe)(Data_URI_Query.printQuery)(v.value2) ]));
};
var parseURI = Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_URI_Types.URI.create)(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Data_URI_Scheme.parseScheme)(Text_Parsing_StringParser_String.string(":"))))(Data_URI_HierarchicalPart.parseHierarchicalPart))(Text_Parsing_StringParser_Combinators.optionMaybe(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("?"))(Data_URI_Query.parseQuery))))(Text_Parsing_StringParser_Combinators.optionMaybe(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("#"))(Data_URI_Fragment.parseFragment))))(Text_Parsing_StringParser_String.eof);
var runParseURI = Text_Parsing_StringParser.runParser(parseURI);
var parseRelativeRef = Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_URI_Types.RelativeRef.create)(Data_URI_RelativePart.parseRelativePart))(Text_Parsing_StringParser_Combinators.optionMaybe(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("?"))(Data_URI_Query.parseQuery))))(Text_Parsing_StringParser_Combinators.optionMaybe(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("#"))(Data_URI_Fragment.parseFragment))))(Text_Parsing_StringParser_String.eof);
var parseURIRef = Control_Alt.alt(Text_Parsing_StringParser.altParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Either.Left.create)(Text_Parsing_StringParser["try"](parseURI)))(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_Either.Right.create)(parseRelativeRef));
var runParseURIRef = Text_Parsing_StringParser.runParser(parseURIRef);
var runParseRelativeRef = Text_Parsing_StringParser.runParser(parseRelativeRef);
var parseAbsoluteURI = Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Control_Apply.apply(Text_Parsing_StringParser.applyParser)(Data_Functor.map(Text_Parsing_StringParser.functorParser)(Data_URI_Types.AbsoluteURI.create)(Control_Apply.applyFirst(Text_Parsing_StringParser.applyParser)(Data_URI_Scheme.parseScheme)(Text_Parsing_StringParser_String.string(":"))))(Data_URI_HierarchicalPart.parseHierarchicalPart))(Text_Parsing_StringParser_Combinators.optionMaybe(Control_Apply.applySecond(Text_Parsing_StringParser.applyParser)(Text_Parsing_StringParser_String.string("?"))(Data_URI_Query.parseQuery))))(Text_Parsing_StringParser_String.eof);
var runParseAbsoluteURI = Text_Parsing_StringParser.runParser(parseAbsoluteURI);
module.exports = {
    parseAbsoluteURI: parseAbsoluteURI, 
    parseRelativeRef: parseRelativeRef, 
    parseURI: parseURI, 
    parseURIRef: parseURIRef, 
    printAbsoluteURI: printAbsoluteURI, 
    printRelativeRef: printRelativeRef, 
    printURI: printURI, 
    printURIRef: printURIRef, 
    runParseAbsoluteURI: runParseAbsoluteURI, 
    runParseRelativeRef: runParseRelativeRef, 
    runParseURI: runParseURI, 
    runParseURIRef: runParseURIRef
};
