// Generated by purs version 0.11.4
"use strict";
var Control_IxMonad = require("../Control.IxMonad");
var Control_Monad = require("../Control.Monad");
var Data_Foldable = require("../Data.Foldable");
var Data_Maybe = require("../Data.Maybe");
var Data_Unit = require("../Data.Unit");
var Hyper_Conn = require("../Hyper.Conn");
var Hyper_Middleware = require("../Hyper.Middleware");
var Hyper_Middleware_Class = require("../Hyper.Middleware.Class");
var Hyper_Response = require("../Hyper.Response");
var Hyper_Status = require("../Hyper.Status");
var withAuthorization = function (a) {
    return function (conn) {
        var $14 = {};
        for (var $15 in conn) {
            if ({}.hasOwnProperty.call(conn, $15)) {
                $14[$15] = conn[$15];
            };
        };
        $14.components = (function () {
            var $11 = {};
            for (var $12 in conn.components) {
                if ({}.hasOwnProperty.call(conn.components, $12)) {
                    $11[$12] = conn["components"][$12];
                };
            };
            $11.authorization = a;
            return $11;
        })();
        return $14;
    };
};
var authorized = function (dictMonad) {
    return function (dictResponseWritable) {
        return function (dictResponse) {
            return function (authorizer) {
                return function (mw) {
                    return Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware(dictMonad))(Hyper_Middleware_Class.getConn(Hyper_Middleware.ixMonadMiddlewareMiddleware(dictMonad.Applicative0())))(function (v) {
                        return Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware(dictMonad))(Hyper_Middleware["lift'"](dictMonad)(authorizer(v)))(function (v1) {
                            if (v1 instanceof Data_Maybe.Just) {
                                return Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware(dictMonad))(Hyper_Middleware_Class.modifyConn(Hyper_Middleware.ixMonadMiddleware(dictMonad))(Hyper_Middleware.ixMonadMiddlewareMiddleware(dictMonad.Applicative0()))(withAuthorization(v1.value0)))(function (v2) {
                                    return Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware(dictMonad))(mw)(function (v3) {
                                        return Hyper_Middleware_Class.modifyConn(Hyper_Middleware.ixMonadMiddleware(dictMonad))(Hyper_Middleware.ixMonadMiddlewareMiddleware(dictMonad.Applicative0()))(withAuthorization(Data_Unit.unit));
                                    });
                                });
                            };
                            if (v1 instanceof Data_Maybe.Nothing) {
                                return Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware(dictMonad))(Hyper_Response.writeStatus(dictResponse)(Hyper_Status.statusForbidden))(function (v2) {
                                    return Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware(dictMonad))(Hyper_Response.headers(Data_Foldable.foldableArray)(dictMonad)(dictResponse)([  ]))(function (v3) {
                                        return Hyper_Response.respond(dictMonad)(dictResponseWritable)(dictResponse)("You are not authorized.");
                                    });
                                });
                            };
                            throw new Error("Failed pattern match at Hyper.Authorization line 39, column 3 - line 48, column 3: " + [ v1.constructor.name ]);
                        });
                    });
                };
            };
        };
    };
};
module.exports = {
    authorized: authorized, 
    withAuthorization: withAuthorization
};
