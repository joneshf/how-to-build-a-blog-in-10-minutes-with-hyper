// Generated by purs version 0.11.4
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Apply = require("../Control.Apply");
var Control_Bind = require("../Control.Bind");
var Control_Category = require("../Control.Category");
var Control_IxMonad = require("../Control.IxMonad");
var Control_Monad_Aff = require("../Control.Monad.Aff");
var Control_Monad_Aff_AVar = require("../Control.Monad.Aff.AVar");
var Control_Monad_Aff_Class = require("../Control.Monad.Aff.Class");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Class = require("../Control.Monad.Eff.Class");
var Control_Monad_Eff_Console = require("../Control.Monad.Eff.Console");
var Control_Monad_Eff_Exception = require("../Control.Monad.Eff.Exception");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_HTTP_Method = require("../Data.HTTP.Method");
var Data_Int = require("../Data.Int");
var Data_Maybe = require("../Data.Maybe");
var Data_Newtype = require("../Data.Newtype");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Data_StrMap = require("../Data.StrMap");
var Data_Tuple = require("../Data.Tuple");
var Data_Unit = require("../Data.Unit");
var Hyper_Conn = require("../Hyper.Conn");
var Hyper_Middleware = require("../Hyper.Middleware");
var Hyper_Middleware_Class = require("../Hyper.Middleware.Class");
var Hyper_Port = require("../Hyper.Port");
var Hyper_Request = require("../Hyper.Request");
var Hyper_Response = require("../Hyper.Response");
var Hyper_Status = require("../Hyper.Status");
var Node_Buffer = require("../Node.Buffer");
var Node_Encoding = require("../Node.Encoding");
var Node_HTTP = require("../Node.HTTP");
var Node_Stream = require("../Node.Stream");
var Prelude = require("../Prelude");
var NodeResponse = function (x) {
    return x;
};
var HttpResponse = (function () {
    function HttpResponse(value0) {
        this.value0 = value0;
    };
    HttpResponse.create = function (value0) {
        return new HttpResponse(value0);
    };
    return HttpResponse;
})();
var HttpRequest = (function () {
    function HttpRequest(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    HttpRequest.create = function (value0) {
        return function (value1) {
            return new HttpRequest(value0, value1);
        };
    };
    return HttpRequest;
})();
var writeString = function (dictMonadAff) {
    return function (enc) {
        return function (str) {
            var writeAsAff = function (w) {
                return function (fail) {
                    return function (succeed) {
                        return function __do() {
                            var v = Node_Stream.writeString(w)(enc)(str)(succeed(Data_Unit.unit))();
                            if (v) {
                                return succeed(Data_Unit.unit)();
                            };
                            return fail(Control_Monad_Eff_Exception.error("Failed to write string to response"))();
                        };
                    };
                };
            };
            return NodeResponse(function (w) {
                return Control_Monad_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Aff.makeAff(writeAsAff(w)));
            });
        };
    };
};
var writeResponse = function (dictMonadAff) {
    return function (r) {
        return function (v) {
            return Hyper_Middleware["lift'"]((dictMonadAff.MonadEff0()).Monad0())(v(Node_HTTP.responseAsStream(r)));
        };
    };
};
var writeHeader$prime = function (dictMonadEff) {
    return function (v) {
        return function (r) {
            return Control_Monad_Eff_Class.liftEff(Hyper_Middleware.monadEffMiddleware(dictMonadEff))(Node_HTTP.setHeader(r)(v.value0)(v.value1));
        };
    };
};
var write = function (dictMonadAff) {
    return function (buffer) {
        return NodeResponse(function (w) {
            return Control_Monad_Aff_Class.liftAff(dictMonadAff)(Control_Monad_Aff.makeAff(function (fail) {
                return function (succeed) {
                    return Data_Functor["void"](Control_Monad_Eff.functorEff)(Node_Stream.write(w)(buffer)(succeed(Data_Unit.unit)));
                };
            }));
        });
    };
};
var stringNodeResponse = function (dictMonadAff) {
    return new Hyper_Response.ResponseWritable(function ($104) {
        return Control_IxMonad.ipure(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(writeString(dictMonadAff)(Node_Encoding.UTF8.value)($104));
    });
};
var stringAndEncodingNodeResponse = function (dictMonadAff) {
    return new Hyper_Response.ResponseWritable(function (v) {
        return Control_IxMonad.ipure(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(writeString(dictMonadAff)(v.value1)(v.value0));
    });
};
var setStatus = function (dictMonadEff) {
    return function (v) {
        return function (r) {
            return Control_Monad_Eff_Class.liftEff(Hyper_Middleware.monadEffMiddleware(dictMonadEff))(function __do() {
                Node_HTTP.setStatusCode(r)(v.code)();
                return Node_HTTP.setStatusMessage(r)(v.reasonPhrase)();
            });
        };
    };
};
var requestHttpRequest = function (dictMonad) {
    return new Hyper_Request.Request(Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware(dictMonad))(Hyper_Middleware_Class.getConn(Hyper_Middleware.ixMonadMiddlewareMiddleware(dictMonad.Applicative0())))(function (v) {
        return Control_IxMonad.ipure(Hyper_Middleware.ixMonadMiddleware(dictMonad))(v.request.value1);
    }));
};
var readBody = function (v) {
    var fillBody = function (stream) {
        return function (chunks) {
            return function (completeBody) {
                return function __do() {
                    Node_Stream.onDataString(stream)(Node_Encoding.UTF8.value)(function (chunk) {
                        return Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.launchAff(Control_Monad_Aff_AVar.modifyVar(function (v1) {
                            return v1 + chunk;
                        })(chunks)));
                    })();
                    return Node_Stream.onEnd(stream)(Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.launchAff(Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(chunks))(Control_Monad_Aff_AVar.putVar(completeBody)))))();
                };
            };
        };
    };
    var stream = Node_HTTP.requestAsStream(v.value0);
    return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v1) {
        return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar["makeVar'"](""))(function (v2) {
            return Control_Bind.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Exception.catchException(function ($105) {
                return Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Maybe.Just.create($105));
            })(Control_Apply.applySecond(Control_Monad_Eff.applyEff)(fillBody(stream)(v2)(v1))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Maybe.Nothing.value)))))(function (v3) {
                if (v3 instanceof Data_Maybe.Just) {
                    return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadThrowAff)(v3.value0);
                };
                if (v3 instanceof Data_Maybe.Nothing) {
                    return Control_Monad_Aff_AVar.takeVar(v1);
                };
                throw new Error("Failed pattern match at Hyper.Node.Server line 94, column 3 - line 96, column 36: " + [ v3.constructor.name ]);
            });
        });
    });
};
var requestBodyReaderReqestBody = function (dictMonad) {
    return function (dictMonadAff) {
        return new Hyper_Request.ReadableBody(Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware(dictMonad))(Data_Functor.map(Hyper_Middleware.functorMiddleware(dictMonad))(function (v) {
            return v.request;
        })(Hyper_Middleware_Class.getConn(Hyper_Middleware.ixMonadMiddlewareMiddleware(dictMonad.Applicative0()))))(function (v) {
            return Hyper_Middleware["lift'"](dictMonad)(Control_Monad_Aff_Class.liftAff(dictMonadAff)(readBody(v)));
        }));
    };
};
var mkHttpRequest = function (request) {
    var headers = Node_HTTP.requestHeaders(request);
    var requestData = {
        url: Node_HTTP.requestURL(request), 
        headers: headers, 
        method: Data_HTTP_Method.fromString(Node_HTTP.requestMethod(request)), 
        contentLength: Control_Bind.bind(Data_Maybe.bindMaybe)(Data_StrMap.lookup("content-length")(headers))(Data_Int.fromString)
    };
    return new HttpRequest(request, requestData);
};
var runServer$prime = function (dictFunctor) {
    return function (options) {
        return function (components) {
            return function (runM) {
                return function (middleware) {
                    var onRequest = function (request) {
                        return function (response) {
                            var conn = {
                                request: mkHttpRequest(request), 
                                response: new HttpResponse(response), 
                                components: components
                            };
                            return Control_Monad_Eff_Exception.catchException(options.onRequestError)(Data_Functor["void"](Control_Monad_Eff.functorEff)(Control_Monad_Aff.launchAff(runM(Hyper_Middleware.evalMiddleware(dictFunctor)(middleware)(conn)))));
                        };
                    };
                    return function __do() {
                        var v = Node_HTTP.createServer(onRequest)();
                        var listenOptions = {
                            port: Data_Newtype.unwrap(Hyper_Port.newtypePort)(options.port), 
                            hostname: "0.0.0.0", 
                            backlog: Data_Maybe.Nothing.value
                        };
                        return Node_HTTP.listen(v)(listenOptions)(options.onListening(options.port))();
                    };
                };
            };
        };
    };
};
var runServer = function (options) {
    return function (components) {
        return function (middleware) {
            return runServer$prime(Control_Monad_Aff.functorAff)(options)(components)(Control_Category.id(Control_Category.categoryFn))(middleware);
        };
    };
};
var getWriter = function (dictMonad) {
    return Data_Functor.map(Hyper_Middleware.functorMiddleware(dictMonad))(function (v) {
        return v.response.writer;
    })(Hyper_Middleware_Class.getConn(Hyper_Middleware.ixMonadMiddlewareMiddleware(dictMonad.Applicative0())));
};
var endResponse = function (dictMonadEff) {
    return function (r) {
        return Control_Monad_Eff_Class.liftEff(Hyper_Middleware.monadEffMiddleware(dictMonadEff))(Node_Stream.end(Node_HTTP.responseAsStream(r))(Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)));
    };
};
var responseWriterHttpResponse = function (dictMonadAff) {
    return new Hyper_Response.Response(Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(Hyper_Middleware_Class.getConn(Hyper_Middleware.ixMonadMiddlewareMiddleware(((dictMonadAff.MonadEff0()).Monad0()).Applicative0())))(function (v) {
        return Hyper_Middleware_Class.modifyConn(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(Hyper_Middleware.ixMonadMiddlewareMiddleware(((dictMonadAff.MonadEff0()).Monad0()).Applicative0()))(function (v1) {
            var $71 = {};
            for (var $72 in v1) {
                if ({}.hasOwnProperty.call(v1, $72)) {
                    $71[$72] = v1[$72];
                };
            };
            $71.response = new HttpResponse(v.response.value0);
            return $71;
        });
    }), Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(Hyper_Middleware_Class.getConn(Hyper_Middleware.ixMonadMiddlewareMiddleware(((dictMonadAff.MonadEff0()).Monad0()).Applicative0())))(function (v) {
        return Control_IxMonad.iapplySecond(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(endResponse(dictMonadAff.MonadEff0())(v.response.value0))(Hyper_Middleware_Class.modifyConn(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(Hyper_Middleware.ixMonadMiddlewareMiddleware(((dictMonadAff.MonadEff0()).Monad0()).Applicative0()))(function (v1) {
            var $77 = {};
            for (var $78 in v1) {
                if ({}.hasOwnProperty.call(v1, $78)) {
                    $77[$78] = v1[$78];
                };
            };
            $77.response = new HttpResponse(v.response.value0);
            return $77;
        }));
    }), function (f) {
        return Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(Hyper_Middleware_Class.getConn(Hyper_Middleware.ixMonadMiddlewareMiddleware(((dictMonadAff.MonadEff0()).Monad0()).Applicative0())))(function (v) {
            return Control_IxMonad.iapplySecond(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(writeResponse(dictMonadAff)(v.response.value0)(f))(Hyper_Middleware_Class.modifyConn(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(Hyper_Middleware.ixMonadMiddlewareMiddleware(((dictMonadAff.MonadEff0()).Monad0()).Applicative0()))(function (v1) {
                var $83 = {};
                for (var $84 in v1) {
                    if ({}.hasOwnProperty.call(v1, $84)) {
                        $83[$84] = v1[$84];
                    };
                };
                $83.response = new HttpResponse(v.response.value0);
                return $83;
            }));
        });
    }, function (header) {
        return Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(Hyper_Middleware_Class.getConn(Hyper_Middleware.ixMonadMiddlewareMiddleware(((dictMonadAff.MonadEff0()).Monad0()).Applicative0())))(function (v) {
            return Control_IxMonad.iapplySecond(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(writeHeader$prime(dictMonadAff.MonadEff0())(header)(v.response.value0))(Hyper_Middleware_Class.modifyConn(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(Hyper_Middleware.ixMonadMiddlewareMiddleware(((dictMonadAff.MonadEff0()).Monad0()).Applicative0()))(function (v1) {
                var $89 = {};
                for (var $90 in v1) {
                    if ({}.hasOwnProperty.call(v1, $90)) {
                        $89[$90] = v1[$90];
                    };
                };
                $89.response = new HttpResponse(v.response.value0);
                return $89;
            }));
        });
    }, function (status) {
        return Control_IxMonad.ibind(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(Hyper_Middleware_Class.getConn(Hyper_Middleware.ixMonadMiddlewareMiddleware(((dictMonadAff.MonadEff0()).Monad0()).Applicative0())))(function (v) {
            return Control_IxMonad.iapplySecond(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(setStatus(dictMonadAff.MonadEff0())(status)(v.response.value0))(Hyper_Middleware_Class.modifyConn(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(Hyper_Middleware.ixMonadMiddlewareMiddleware(((dictMonadAff.MonadEff0()).Monad0()).Applicative0()))(function (v1) {
                var $95 = {};
                for (var $96 in v1) {
                    if ({}.hasOwnProperty.call(v1, $96)) {
                        $95[$96] = v1[$96];
                    };
                };
                $95.response = new HttpResponse(v.response.value0);
                return $95;
            }));
        });
    });
};
var defaultOptions = {
    hostname: "0.0.0.0", 
    port: 3000, 
    onListening: Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit)), 
    onRequestError: Data_Function["const"](Control_Applicative.pure(Control_Monad_Eff.applicativeEff)(Data_Unit.unit))
};
var defaultOptionsWithLogging = (function () {
    var onRequestError = function (err) {
        return Control_Monad_Eff_Console.log("Request failed: " + Data_Show.show(Control_Monad_Eff_Exception.showError)(err));
    };
    var onListening = function (v) {
        return Control_Monad_Eff_Console.log("Listening on http://localhost:" + Data_Show.show(Data_Show.showInt)(v));
    };
    var $101 = {};
    for (var $102 in defaultOptions) {
        if ({}.hasOwnProperty.call(defaultOptions, $102)) {
            $101[$102] = defaultOptions[$102];
        };
    };
    $101.onListening = onListening;
    $101.onRequestError = onRequestError;
    return $101;
})();
var bufferNodeResponse = function (dictMonadAff) {
    return new Hyper_Response.ResponseWritable(function (buf) {
        return Control_IxMonad.ipure(Hyper_Middleware.ixMonadMiddleware((dictMonadAff.MonadEff0()).Monad0()))(write(dictMonadAff)(buf));
    });
};
module.exports = {
    defaultOptions: defaultOptions, 
    defaultOptionsWithLogging: defaultOptionsWithLogging, 
    runServer: runServer, 
    "runServer'": runServer$prime, 
    write: write, 
    writeString: writeString, 
    requestHttpRequest: requestHttpRequest, 
    stringNodeResponse: stringNodeResponse, 
    stringAndEncodingNodeResponse: stringAndEncodingNodeResponse, 
    bufferNodeResponse: bufferNodeResponse, 
    requestBodyReaderReqestBody: requestBodyReaderReqestBody, 
    responseWriterHttpResponse: responseWriterHttpResponse
};
