// Generated by purs version 0.11.4
"use strict";
var $foreign = require("./foreign");
var Data_DateTime = require("../Data.DateTime");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_JSDate = require("../Data.JSDate");
var Data_Maybe = require("../Data.Maybe");
var Data_Semigroup = require("../Data.Semigroup");
var Data_Show = require("../Data.Show");
var Partial_Unsafe = require("../Partial.Unsafe");
var Prelude = require("../Prelude");
var Stats = (function () {
    function Stats(value0) {
        this.value0 = value0;
    };
    Stats.create = function (value0) {
        return new Stats(value0);
    };
    return Stats;
})();
var statusChangedTime = function (v) {
    return Data_Maybe.fromJust()(Data_JSDate.toDateTime(v.value0.ctime));
};
var showStats = new Data_Show.Show(function (v) {
    return "Stats " + $foreign.showStatsObj(v.value0);
});
var modifiedTime = function (v) {
    return Data_Maybe.fromJust()(Data_JSDate.toDateTime(v.value0.mtime));
};
var isSymbolicLink = function (v) {
    return $foreign.statsMethod("isSymbolicLink", v.value0);
};
var isSocket = function (v) {
    return $foreign.statsMethod("isSocket", v.value0);
};
var isFile = function (v) {
    return $foreign.statsMethod("isFile", v.value0);
};
var isFIFO = function (v) {
    return $foreign.statsMethod("isFIFO", v.value0);
};
var isDirectory = function (v) {
    return $foreign.statsMethod("isDirectory", v.value0);
};
var isCharacterDevice = function (v) {
    return $foreign.statsMethod("isCharacterDevice", v.value0);
};
var isBlockDevice = function (v) {
    return $foreign.statsMethod("isBlockDevice", v.value0);
};
var accessedTime = function (v) {
    return Data_Maybe.fromJust()(Data_JSDate.toDateTime(v.value0.atime));
};
module.exports = {
    Stats: Stats, 
    accessedTime: accessedTime, 
    isBlockDevice: isBlockDevice, 
    isCharacterDevice: isCharacterDevice, 
    isDirectory: isDirectory, 
    isFIFO: isFIFO, 
    isFile: isFile, 
    isSocket: isSocket, 
    isSymbolicLink: isSymbolicLink, 
    modifiedTime: modifiedTime, 
    statusChangedTime: statusChangedTime, 
    showStats: showStats
};
