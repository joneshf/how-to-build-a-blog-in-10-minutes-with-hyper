// Generated by purs version 0.11.4
"use strict";
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Function = require("../Data.Function");
var Data_Function_Uncurried = require("../Data.Function.Uncurried");
var Data_Maybe = require("../Data.Maybe");
var Data_Nullable = require("../Data.Nullable");
var Data_Semiring = require("../Data.Semiring");
var Node_FS = require("../Node.FS");
var Node_FS_Internal = require("../Node.FS.Internal");
var Node_FS_Perms = require("../Node.FS.Perms");
var Node_Path = require("../Node.Path");
var Node_Stream = require("../Node.Stream");
var Prelude = require("../Prelude");
var readWrite = (function () {
    var rw = Data_Semiring.add(Node_FS_Perms.semiringPerm)(Node_FS_Perms.read)(Node_FS_Perms.write);
    return Node_FS_Perms.mkPerms(rw)(rw)(rw);
})();
var $$null = Data_Nullable.toNullable(Data_Maybe.Nothing.value);
var nonnull = function ($4) {
    return Data_Nullable.toNullable(Data_Maybe.Just.create($4));
};
var fs = Node_FS_Internal.unsafeRequireFS;
var fdCreateWriteStreamWith = function (opts) {
    return function (fd) {
        return Node_FS_Internal.mkEff(function (v) {
            return fs.createWriteStream($$null, {
                fd: fd, 
                mode: Node_FS_Perms.permsToInt(opts.perms), 
                flags: Node_FS.fileFlagsToNode(opts.flags)
            });
        });
    };
};
var fdCreateReadStreamWith = function (opts) {
    return function (fd) {
        return Node_FS_Internal.mkEff(function (v) {
            return fs.createReadStream($$null, {
                fd: fd, 
                mode: Node_FS_Perms.permsToInt(opts.perms), 
                flags: Node_FS.fileFlagsToNode(opts.flags), 
                autoClose: opts.autoClose
            });
        });
    };
};
var defaultWriteStreamOptions = {
    flags: Node_FS.W.value, 
    perms: readWrite
};
var fdCreateWriteStream = fdCreateWriteStreamWith(defaultWriteStreamOptions);
var defaultReadStreamOptions = {
    flags: Node_FS.R.value, 
    perms: readWrite, 
    autoClose: true
};
var fdCreateReadStream = fdCreateReadStreamWith(defaultReadStreamOptions);
var createWriteStreamWith = function (opts) {
    return function (file) {
        return Node_FS_Internal.mkEff(function (v) {
            return fs.createWriteStream(nonnull(file), {
                mode: Node_FS_Perms.permsToInt(opts.perms), 
                flags: Node_FS.fileFlagsToNode(opts.flags)
            });
        });
    };
};
var createWriteStream = createWriteStreamWith(defaultWriteStreamOptions);
var createReadStreamWith = function (opts) {
    return function (file) {
        return Node_FS_Internal.mkEff(function (v) {
            return fs.createReadStream(nonnull(file), {
                mode: Node_FS_Perms.permsToInt(opts.perms), 
                flags: Node_FS.fileFlagsToNode(opts.flags), 
                autoClose: opts.autoClose
            });
        });
    };
};
var createReadStream = createReadStreamWith(defaultReadStreamOptions);
module.exports = {
    createReadStream: createReadStream, 
    createReadStreamWith: createReadStreamWith, 
    createWriteStream: createWriteStream, 
    createWriteStreamWith: createWriteStreamWith, 
    defaultReadStreamOptions: defaultReadStreamOptions, 
    defaultWriteStreamOptions: defaultWriteStreamOptions, 
    fdCreateReadStream: fdCreateReadStream, 
    fdCreateReadStreamWith: fdCreateReadStreamWith, 
    fdCreateWriteStream: fdCreateWriteStream, 
    fdCreateWriteStreamWith: fdCreateWriteStreamWith
};
