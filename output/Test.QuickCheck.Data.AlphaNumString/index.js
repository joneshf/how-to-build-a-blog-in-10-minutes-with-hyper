// Generated by purs version 0.11.4
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Semigroupoid = require("../Control.Semigroupoid");
var Data_Eq = require("../Data.Eq");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Newtype = require("../Data.Newtype");
var Data_NonEmpty = require("../Data.NonEmpty");
var Data_Ord = require("../Data.Ord");
var Data_String = require("../Data.String");
var Prelude = require("../Prelude");
var Test_QuickCheck_Arbitrary = require("../Test.QuickCheck.Arbitrary");
var Test_QuickCheck_Gen = require("../Test.QuickCheck.Gen");
var AlphaNumString = function (x) {
    return x;
};
var ordAlphaNumString = Data_Ord.ordString;
var newtypeAlphaNumString = new Data_Newtype.Newtype(function (n) {
    return n;
}, AlphaNumString);
var eqAlphaNumString = Data_Eq.eqString;
var coarbAlphaNumString = Test_QuickCheck_Arbitrary.coarbString;
var arbAlphaNumString = new Test_QuickCheck_Arbitrary.Arbitrary((function () {
    var rest = Data_String.toCharArray("bcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789");
    var anyChar = Test_QuickCheck_Gen.oneOf(new Data_NonEmpty.NonEmpty(Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen)("a"), Data_Functor.map(Data_Functor.functorArray)(Control_Applicative.pure(Test_QuickCheck_Gen.applicativeGen))(rest)));
    return Data_Functor.map(Test_QuickCheck_Gen.functorGen)(function ($3) {
        return AlphaNumString(Data_String.fromCharArray($3));
    })(Test_QuickCheck_Gen.arrayOf(anyChar));
})());
module.exports = {
    AlphaNumString: AlphaNumString, 
    newtypeAlphaNumString: newtypeAlphaNumString, 
    eqAlphaNumString: eqAlphaNumString, 
    ordAlphaNumString: ordAlphaNumString, 
    arbAlphaNumString: arbAlphaNumString, 
    coarbAlphaNumString: coarbAlphaNumString
};
